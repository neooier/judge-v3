name: Build and Push

on:
    push:
        branches:
            - "**"

jobs:
    build_master:
        if: github.ref == 'refs/heads/master'
        name: Build and Push
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set up QEMU
              uses: docker/setup-buildx-action@v1
            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Generate Tag List
              run: |
                  echo "TAGS<<EOF" >> $GITHUB_ENV

                  HASH_SHORT="$(git rev-parse --short HEAD)"
                  echo $IMAGE_NAME:$HASH_SHORT >> $GITHUB_ENV
                  echo $IMAGE_NAME:latest >> $GITHUB_ENV

                  echo "EOF" >> $GITHUB_ENV
              env:
                  IMAGE_NAME: jorylee/sdfzoj-judge
            - name: Build and Push
              uses: docker/build-push-action@v2
              with:
                  platforms: linux/amd64
                  push: true
                  tags: ${{ env.TAGS }}
                  file: Dockerfile

    build_non_master:
        if: github.ref != 'refs/heads/master'
        name: Build (no push)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set up QEMU
              uses: docker/setup-buildx-action@v1
            - name: Generate Tag List
              run: |
                  echo "TAGS<<EOF" >> $GITHUB_ENV

                  HASH_SHORT="$(git rev-parse --short HEAD)"
                  echo $IMAGE_NAME:$HASH_SHORT >> $GITHUB_ENV

                  echo "EOF" >> $GITHUB_ENV
              env:
                  IMAGE_NAME: jorylee/sdfzoj-judge
            - name: Build
              uses: docker/build-push-action@v2
              with:
                  platforms: linux/amd64
                  push: false
                  tags: ${{ env.TAGS }}
                  file: Dockerfile
